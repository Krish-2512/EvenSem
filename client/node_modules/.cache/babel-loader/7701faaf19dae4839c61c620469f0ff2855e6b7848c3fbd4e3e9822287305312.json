{"ast":null,"code":"//import React, { useState } from 'react';\n//import axios from 'axios';\n//import { Link, useNavigate } from 'react-router-dom';\n//\n//function Login({ onLogin }) {\n//  const [formData, setFormData] = useState({ username: '', password: '' });\n//  const [message, setMessage] = useState('');\n//  const navigate = useNavigate();\n//\n//  const handleChange = (e) => {\n//    setFormData({ ...formData, [e.target.name]: e.target.value });\n//  };\n//\n//  const handleSubmit = async (e) => {\n//    e.preventDefault();\n//    try {\n//      const response = await axios.post('http://127.0.0.1:8000/login', new URLSearchParams({\n//        username: formData.username,\n//        password: formData.password,\n//      }), {\n//        headers: {\n//          'Content-Type': 'application/x-www-form-urlencoded',\n//        },\n//      });\n//      const token = response.data.access_token;\n//      onLogin(token);\n//      setMessage('Login successful!');\n//      // Decode token to get role and redirect accordingly\n//      const payload = JSON.parse(atob(token.split('.')[1]));\n//      const role = payload.role;\n//      if (role === 'job_seeker') {\n//        navigate('/job-openings');\n//      } else if (role === 'recruiter' || role === 'admin') {\n//        navigate('/dashboard');\n//      } else {\n//        navigate('/job-description');\n//      }\n//    } catch (error) {\n//      setMessage('Login failed. Check your credentials.');\n//      console.error(error.response?.data);\n//    }\n//  };\n//\n//  return (\n//    <div className=\"App\">\n//      <h1>Login to CvAlign</h1>\n//      <form onSubmit={handleSubmit} className=\"form\">\n//        <div>\n//          <label className=\"form-label\">Username:</label>\n//          <input\n//            type=\"text\"\n//            name=\"username\"\n//            value={formData.username}\n//            onChange={handleChange}\n//            required\n//            className=\"form-input\"\n//          />\n//        </div>\n//        <div>\n//          <label className=\"form-label\">Password:</label>\n//          <input\n//            type=\"password\"\n//            name=\"password\"\n//            value={formData.password}\n//            onChange={handleChange}\n//            required\n//            className=\"form-input\"\n//          />\n//        </div>\n//        <button type=\"submit\" className=\"form-button\">Login</button>\n//      </form>\n//      {message && <p className=\"form-message\">{message}</p>}\n//      <p>\n//        Don't have an account? <Link to=\"/register\" className=\"modal-link\">Register here</Link>\n//      </p>\n//    </div>\n//  );\n//}\n//\n//export default Login;","map":{"version":3,"names":[],"sources":["D:/resumeFolder/CV-Align/frontend/src/components/Login.js"],"sourcesContent":["//import React, { useState } from 'react';\r\n//import axios from 'axios';\r\n//import { Link, useNavigate } from 'react-router-dom';\r\n//\r\n//function Login({ onLogin }) {\r\n//  const [formData, setFormData] = useState({ username: '', password: '' });\r\n//  const [message, setMessage] = useState('');\r\n//  const navigate = useNavigate();\r\n//\r\n//  const handleChange = (e) => {\r\n//    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//  };\r\n//\r\n//  const handleSubmit = async (e) => {\r\n//    e.preventDefault();\r\n//    try {\r\n//      const response = await axios.post('http://127.0.0.1:8000/login', new URLSearchParams({\r\n//        username: formData.username,\r\n//        password: formData.password,\r\n//      }), {\r\n//        headers: {\r\n//          'Content-Type': 'application/x-www-form-urlencoded',\r\n//        },\r\n//      });\r\n//      const token = response.data.access_token;\r\n//      onLogin(token);\r\n//      setMessage('Login successful!');\r\n//      // Decode token to get role and redirect accordingly\r\n//      const payload = JSON.parse(atob(token.split('.')[1]));\r\n//      const role = payload.role;\r\n//      if (role === 'job_seeker') {\r\n//        navigate('/job-openings');\r\n//      } else if (role === 'recruiter' || role === 'admin') {\r\n//        navigate('/dashboard');\r\n//      } else {\r\n//        navigate('/job-description');\r\n//      }\r\n//    } catch (error) {\r\n//      setMessage('Login failed. Check your credentials.');\r\n//      console.error(error.response?.data);\r\n//    }\r\n//  };\r\n//\r\n//  return (\r\n//    <div className=\"App\">\r\n//      <h1>Login to CvAlign</h1>\r\n//      <form onSubmit={handleSubmit} className=\"form\">\r\n//        <div>\r\n//          <label className=\"form-label\">Username:</label>\r\n//          <input\r\n//            type=\"text\"\r\n//            name=\"username\"\r\n//            value={formData.username}\r\n//            onChange={handleChange}\r\n//            required\r\n//            className=\"form-input\"\r\n//          />\r\n//        </div>\r\n//        <div>\r\n//          <label className=\"form-label\">Password:</label>\r\n//          <input\r\n//            type=\"password\"\r\n//            name=\"password\"\r\n//            value={formData.password}\r\n//            onChange={handleChange}\r\n//            required\r\n//            className=\"form-input\"\r\n//          />\r\n//        </div>\r\n//        <button type=\"submit\" className=\"form-button\">Login</button>\r\n//      </form>\r\n//      {message && <p className=\"form-message\">{message}</p>}\r\n//      <p>\r\n//        Don't have an account? <Link to=\"/register\" className=\"modal-link\">Register here</Link>\r\n//      </p>\r\n//    </div>\r\n//  );\r\n//}\r\n//\r\n//export default Login;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}